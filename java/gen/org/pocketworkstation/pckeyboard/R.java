/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package org.pocketworkstation.pckeyboard;

public final class R {
    public static final class anim {
        public static final int key_preview_fadein=0x7f040000;
        public static final int key_preview_fadeout=0x7f040001;
        public static final int mini_keyboard_fadein=0x7f040002;
        public static final int mini_keyboard_fadeout=0x7f040003;
    }
    public static final class array {
        public static final int chording_alt_key_entries=0x7f0d000d;
        public static final int chording_alt_key_values=0x7f0d000e;
        public static final int chording_ctrl_key_entries=0x7f0d000b;
        public static final int chording_ctrl_key_values=0x7f0d000c;
        public static final int chording_meta_key_entries=0x7f0d000f;
        public static final int chording_meta_key_values=0x7f0d0010;
        public static final int click_method_entries=0x7f0d0015;
        public static final int click_method_values=0x7f0d0016;
        public static final int hint_modes=0x7f0d0011;
        public static final int hint_modes_values=0x7f0d0012;
        public static final int keyboard_layout_modes=0x7f0d0007;
        public static final int keyboard_layout_modes_values=0x7f0d0008;
        public static final int keyboard_mode_entries=0x7f0d0009;
        public static final int keyboard_mode_values=0x7f0d000a;
        public static final int popup_content_entries=0x7f0d001b;
        /**   The values are a bitmap, keep in sync with Keyboard.java 
         */
        public static final int popup_content_values=0x7f0d001c;
        /**  Array of prediction modes 
         */
        public static final int prediction_modes=0x7f0d0002;
        public static final int prediction_modes_values=0x7f0d0003;
        public static final int render_mode_entries=0x7f0d0017;
        /**  Keep these values in sync with android.view.View LAYER_TYPE_* definitions 
         */
        public static final int render_mode_values=0x7f0d0018;
        /**  Array of the settings key modes 
         */
        public static final int settings_key_modes=0x7f0d0001;
        /**  Array of the settings key mode values 
         */
        public static final int settings_key_modes_values=0x7f0d0000;
        /**  Values are a bitmap, see use in PointerTracker 
         */
        public static final int slide_keys_entries=0x7f0d0013;
        public static final int slide_keys_values=0x7f0d0014;
        public static final int swipe_action_entries=0x7f0d0019;
        public static final int swipe_action_values=0x7f0d001a;
        /**  Array of Voice Input modes 
         */
        public static final int voice_input_modes=0x7f0d0004;
        /**  Array of Voice Input modes summary 
         */
        public static final int voice_input_modes_summary=0x7f0d0006;
        public static final int voice_input_modes_values=0x7f0d0005;
    }
    public static final class attr {
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int asPercent=0x7f01001b;
        /**   Transparent key background? 0=fully transparent, 255=opaque (fast) 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backgroundAlpha=0x7f010027;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backgroundDimAmount=0x7f010030;
        /**  The label to display on the caps-shifted key. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int capsLabel=0x7f010017;
        /**  The unicode value or comma-separated values that this key outputs. 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int codes=0x7f01000b;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int displayFormat=0x7f01001e;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int extension=0x7f01000a;
        /**  Default horizontal gap between keys. Added to key size. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int horizontalGap=0x7f010002;
        /**  Horizontal padding around key. Included in key size. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int horizontalPad=0x7f010004;
        /**  The icon to show in the popup preview. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconPreview=0x7f010013;
        /**  Whether this is a cursor key (modifies styling). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isCursor=0x7f010011;
        /**  Whether this is a modifier key such as Alt or Shift. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isModifier=0x7f01000f;
        /**  Whether long-pressing on this key will make it repeat. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isRepeatable=0x7f010012;
        /**  Whether this is a toggle key. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isSticky=0x7f010010;
        /**  Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyBackground=0x7f010020;
        /**  Color to use for cursor key labels. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyCursorColor=0x7f010025;
        /**  Key edge flags. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>1</td><td> Key is anchored to the left of the keyboard. </td></tr>
<tr><td><code>right</code></td><td>2</td><td> Key is anchored to the right of the keyboard. </td></tr>
</table>
         */
        public static final int keyEdgeFlags=0x7f01000e;
        /**  Default height of a key, in pixels or percentage of display width. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHeight=0x7f010001;
        /**  Color to use for key hint labels. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintColor=0x7f010024;
        /**  Hysteresis distance for key debouncing 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHysteresisDistance=0x7f01002b;
        /**  The icon to display on the key instead of the label. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyIcon=0x7f010018;
        /**  The label to display on the key. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLabel=0x7f010015;
        /**  The string of characters to output when this key is pressed. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyOutputText=0x7f010014;
        /**  Height of the key press feedback popup. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewHeight=0x7f01002a;
        /**  Layout resource for key press feedback.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyPreviewLayout=0x7f010028;
        /**  Vertical offset of the key press feedback from the key. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewOffset=0x7f010029;
        /**  Color to use for the label in a key. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextColor=0x7f010023;
        /**  Size of the text for character keys. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextSize=0x7f010021;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
         */
        public static final int keyTextStyle=0x7f010031;
        /**  Default width of a key, in pixels or percentage of display width. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyWidth=0x7f010000;
        /**  Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the row will be skipped. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardMode=0x7f010009;
        /**  Default KeyboardView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardViewStyle=0x7f01001f;
        /**  Size of the text for custom keys with some text and no icon. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int labelTextSize=0x7f010022;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layoutColumns=0x7f010007;
        /**  Layout info for key sizing purposes, giving rows/column counts of the base grid 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layoutRows=0x7f010006;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int logScale=0x7f01001d;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxValue=0x7f01001a;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minValue=0x7f010019;
        /**  The characters to display in the popup keyboard. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int popupCharacters=0x7f01000d;
        /**  The XML keyboard layout of any popup keyboard. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupKeyboard=0x7f01000c;
        /**  Layout resource for popup keyboards. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupLayout=0x7f01002d;
        /**   Do symbols need to be recolored? 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int recolorSymbols=0x7f010026;
        /**  Row edge flags. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>4</td><td> Row is anchored to the top of the keyboard. </td></tr>
<tr><td><code>bottom</code></td><td>8</td><td> Row is anchored to the bottom of the keyboard. </td></tr>
</table>
         */
        public static final int rowEdgeFlags=0x7f010008;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shadowColor=0x7f01002e;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shadowRadius=0x7f01002f;
        /**  The label to display on the shifted key. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shiftLabel=0x7f010016;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int step=0x7f01001c;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>white</code></td><td>0</td><td></td></tr>
<tr><td><code>black</code></td><td>1</td><td></td></tr>
</table>
         */
        public static final int symbolColorScheme=0x7f010032;
        /**  Amount to offset the touch Y coordinate by, for bias correction. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalCorrection=0x7f01002c;
        /**  Default vertical gap between rows of keys. Added to key size. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalGap=0x7f010003;
        /**  Vertical padding around key. Included in key size. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalPad=0x7f010005;
    }
    public static final class bool {
        public static final int config_long_press_comma_for_settings_enabled=0x7f09000a;
        public static final int config_swipeDisambiguation=0x7f090007;
        public static final int default_add_shift_to_popup=0x7f09000f;
        public static final int default_auto_cap=0x7f090001;
        public static final int default_caps_lock=0x7f090011;
        public static final int default_compact_mode_enabled=0x7f090010;
        public static final int default_connectbot_tab_hack=0x7f09000b;
        public static final int default_force_keyboard_on=0x7f09000d;
        public static final int default_fullscreen_override=0x7f09000c;
        public static final int default_keyboard_notification=0x7f09000e;
        /**  Whether or not Popup on key press is enabled by default 
 Whether or not Popup on key press is enabled by default 
         */
        public static final int default_popup_preview=0x7f090008;
        public static final int default_quick_fixes=0x7f090002;
        public static final int default_recorrection_enabled=0x7f090009;
        public static final int default_shift_lock_modifiers=0x7f090012;
        public static final int default_suggestions=0x7f090003;
        public static final int default_suggestions_in_landscape=0x7f090004;
        /**  Whether or not auto-correction should be enabled by default 
         */
        public static final int enable_autocorrect=0x7f090000;
        /**  Whether this input method should be used as the default for a locale. Override it
         for latin languages. 
         */
        public static final int im_is_default=0x7f090005;
        /**  Whether or not voice input is enabled by default. 
         */
        public static final int voice_input_default=0x7f090006;
    }
    public static final class color {
        public static final int candidate_normal=0x7f0a0000;
        public static final int candidate_other=0x7f0a0002;
        public static final int candidate_recommended=0x7f0a0001;
        public static final int latinkeyboard_bar_language_shadow_black=0x7f0a0005;
        public static final int latinkeyboard_bar_language_shadow_white=0x7f0a0004;
        public static final int latinkeyboard_dim_color_black=0x7f0a0007;
        public static final int latinkeyboard_dim_color_white=0x7f0a0006;
        public static final int latinkeyboard_extension_background=0x7f0a0008;
        public static final int latinkeyboard_feedback_language_text=0x7f0a0009;
        public static final int latinkeyboard_key_color_black=0x7f0a000b;
        public static final int latinkeyboard_key_color_white=0x7f0a000a;
        public static final int latinkeyboard_transparent=0x7f0a0003;
    }
    public static final class dimen {
        public static final int bubble_pointer_offset=0x7f0c0007;
        public static final int candidate_min_touchable_width=0x7f0c0015;
        public static final int candidate_strip_fading_edge_length=0x7f0c0009;
        public static final int candidate_strip_height=0x7f0c0008;
        public static final int key_bottom_gap=0x7f0c0001;
        /**  key_height + key_bottom_gap = popup_key_height 
 key_height + key_bottom_gap = popup_key_height 
 key_height + key_bottom_gap = popup_key_height 
 key_height + key_bottom_gap = popup_key_height 
         */
        public static final int key_height=0x7f0c0000;
        public static final int key_horizontal_pad=0x7f0c0002;
        public static final int key_hysteresis_distance=0x7f0c0013;
        public static final int key_label_text_size=0x7f0c000d;
        /**  key_preview_text_size_large x 2 
         */
        public static final int key_preview_height=0x7f0c0010;
        public static final int key_preview_offset=0x7f0c000f;
        public static final int key_preview_text_size_large=0x7f0c000e;
        /**   Key size for 5-row mode. Scaled up by 1.25 for 4-row mode. 
  Key size for 5-row mode. Scaled up by 1.25 for 4-row mode. 
         */
        public static final int key_text_size=0x7f0c000c;
        public static final int key_vertical_pad=0x7f0c0003;
        public static final int key_vertical_pad_compact=0x7f0c0004;
        public static final int keyboard_bottom_padding=0x7f0c0006;
        /**  We use "inch", not "dip" because this value tries dealing with physical distance related
         to user's finger. 
         */
        public static final int keyboard_vertical_correction=0x7f0c0014;
        /**  If the screen height in landscape is larger than the below value, then the keyboard
         will not go into extract (fullscreen) mode. 
         */
        public static final int max_height_for_fullscreen=0x7f0c000b;
        /**  Amount of allowance for selecting keys in a mini popup keyboard by sliding finger. 
 popup_key_height x 1.7 
 Amount of allowance for selecting keys in a mini popup keyboard by sliding finger. 
 popup_key_height x 1.7 
         */
        public static final int mini_keyboard_slide_allowance=0x7f0c0011;
        /**  popup_key_height x 1.0 
 popup_key_height x 1.0 
         */
        public static final int mini_keyboard_vertical_correction=0x7f0c0012;
        public static final int popup_key_height=0x7f0c0005;
        public static final int spacebar_vertical_correction=0x7f0c000a;
    }
    public static final class drawable {
        public static final int btn_keyboard_key_dark_active_holo=0x7f020000;
        public static final int btn_keyboard_key_dark_normal=0x7f020001;
        public static final int btn_keyboard_key_dark_normal_holo=0x7f020002;
        public static final int btn_keyboard_key_dark_normal_lock=0x7f020003;
        public static final int btn_keyboard_key_dark_normal_lock_holo=0x7f020004;
        public static final int btn_keyboard_key_dark_normal_off=0x7f020005;
        public static final int btn_keyboard_key_dark_normal_off_holo=0x7f020006;
        public static final int btn_keyboard_key_dark_normal_on=0x7f020007;
        public static final int btn_keyboard_key_dark_normal_on_holo=0x7f020008;
        public static final int btn_keyboard_key_dark_pressed=0x7f020009;
        public static final int btn_keyboard_key_dark_pressed_holo=0x7f02000a;
        public static final int btn_keyboard_key_dark_pressed_off=0x7f02000b;
        public static final int btn_keyboard_key_dark_pressed_off_holo=0x7f02000c;
        public static final int btn_keyboard_key_dark_pressed_on=0x7f02000d;
        public static final int btn_keyboard_key_dark_pressed_on_holo=0x7f02000e;
        public static final int btn_keyboard_key_gingerbread=0x7f02000f;
        public static final int btn_keyboard_key_gingerbread_popup=0x7f020010;
        public static final int btn_keyboard_key_ics=0x7f020011;
        public static final int btn_keyboard_key_light_normal=0x7f020012;
        public static final int btn_keyboard_key_light_normal_holo=0x7f020013;
        public static final int btn_keyboard_key_light_popup_normal=0x7f020014;
        public static final int btn_keyboard_key_light_popup_selected=0x7f020015;
        public static final int btn_keyboard_key_light_pressed=0x7f020016;
        public static final int btn_keyboard_key_light_pressed_holo=0x7f020017;
        public static final int btn_keyboard_key_normal_lock_stone=0x7f020018;
        public static final int btn_keyboard_key_normal_off_stone=0x7f020019;
        public static final int btn_keyboard_key_normal_on_stone=0x7f02001a;
        public static final int btn_keyboard_key_normal_stone=0x7f02001b;
        public static final int btn_keyboard_key_popup_selected_holo=0x7f02001c;
        public static final int btn_keyboard_key_pressed_stone=0x7f02001d;
        public static final int btn_keyboard_key_stone=0x7f02001e;
        public static final int cancel=0x7f02001f;
        public static final int candidate_feedback_background=0x7f020020;
        public static final int caution=0x7f020021;
        public static final int dialog_bubble_step02=0x7f020022;
        public static final int dialog_bubble_step07=0x7f020023;
        public static final int highlight_pressed=0x7f020024;
        public static final int hint_popup=0x7f020025;
        public static final int ic_dialog_keyboard=0x7f020026;
        public static final int ic_mic_dialog=0x7f020027;
        public static final int ic_subtype_keyboard=0x7f020028;
        public static final int ic_subtype_mic=0x7f020029;
        public static final int ic_suggest_scroll_background=0x7f02002a;
        public static final int ic_suggest_strip_microphone=0x7f02002b;
        public static final int ic_suggest_strip_microphone_swipe=0x7f02002c;
        public static final int icon=0x7f02002d;
        public static final int keyboard_background=0x7f02002e;
        public static final int keyboard_dark_background=0x7f02002f;
        public static final int keyboard_key_feedback_background=0x7f020030;
        public static final int keyboard_key_feedback_more_background=0x7f020031;
        public static final int keyboard_popup_panel_background=0x7f020032;
        public static final int keyboard_suggest_strip=0x7f020033;
        public static final int keyboard_suggest_strip_divider=0x7f020034;
        public static final int list_selector_background_pressed=0x7f020035;
        public static final int mic_slash=0x7f020036;
        public static final int ok_cancel=0x7f020037;
        public static final int speak_now_level0=0x7f020038;
        public static final int speak_now_level1=0x7f020039;
        public static final int speak_now_level2=0x7f02003a;
        public static final int speak_now_level3=0x7f02003b;
        public static final int speak_now_level4=0x7f02003c;
        public static final int speak_now_level5=0x7f02003d;
        public static final int speak_now_level6=0x7f02003e;
        public static final int sym_keyboard_123_mic=0x7f02003f;
        public static final int sym_keyboard_delete=0x7f020040;
        public static final int sym_keyboard_done=0x7f020041;
        public static final int sym_keyboard_feedback_123_mic=0x7f020042;
        public static final int sym_keyboard_feedback_delete=0x7f020043;
        public static final int sym_keyboard_feedback_done=0x7f020044;
        public static final int sym_keyboard_feedback_language_arrows_left=0x7f020045;
        public static final int sym_keyboard_feedback_language_arrows_right=0x7f020046;
        public static final int sym_keyboard_feedback_mic=0x7f020047;
        public static final int sym_keyboard_feedback_numalt=0x7f020048;
        public static final int sym_keyboard_feedback_return=0x7f020049;
        public static final int sym_keyboard_feedback_search=0x7f02004a;
        public static final int sym_keyboard_feedback_settings=0x7f02004b;
        public static final int sym_keyboard_feedback_shift=0x7f02004c;
        public static final int sym_keyboard_feedback_shift_locked=0x7f02004d;
        public static final int sym_keyboard_feedback_space=0x7f02004e;
        public static final int sym_keyboard_feedback_tab=0x7f02004f;
        public static final int sym_keyboard_language_arrows_left=0x7f020050;
        public static final int sym_keyboard_language_arrows_right=0x7f020051;
        public static final int sym_keyboard_mic=0x7f020052;
        public static final int sym_keyboard_num0=0x7f020053;
        public static final int sym_keyboard_num1=0x7f020054;
        public static final int sym_keyboard_num2=0x7f020055;
        public static final int sym_keyboard_num3=0x7f020056;
        public static final int sym_keyboard_num4=0x7f020057;
        public static final int sym_keyboard_num5=0x7f020058;
        public static final int sym_keyboard_num6=0x7f020059;
        public static final int sym_keyboard_num7=0x7f02005a;
        public static final int sym_keyboard_num8=0x7f02005b;
        public static final int sym_keyboard_num9=0x7f02005c;
        public static final int sym_keyboard_numalt=0x7f02005d;
        public static final int sym_keyboard_numpound=0x7f02005e;
        public static final int sym_keyboard_numstar=0x7f02005f;
        public static final int sym_keyboard_return=0x7f020060;
        public static final int sym_keyboard_search=0x7f020061;
        public static final int sym_keyboard_settings=0x7f020062;
        public static final int sym_keyboard_shift=0x7f020063;
        public static final int sym_keyboard_shift_lock=0x7f020064;
        public static final int sym_keyboard_shift_locked=0x7f020065;
        public static final int sym_keyboard_space=0x7f020066;
        public static final int sym_keyboard_space_led=0x7f020067;
        public static final int sym_keyboard_tab=0x7f020068;
        public static final int voice_ime_background=0x7f020069;
        public static final int voice_swipe_hint=0x7f02006a;
        public static final int working=0x7f02006b;
    }
    public static final class id {
        public static final int LatinKeyboardBaseView=0x7f07000b;
        public static final int LatinkeyboardBaseView=0x7f07000a;
        public static final int black=0x7f070008;
        public static final int bold=0x7f070005;
        public static final int bottom=0x7f070001;
        public static final int button=0x7f070016;
        public static final int button_text=0x7f070017;
        public static final int candidates=0x7f070009;
        public static final int image=0x7f070014;
        public static final int italic=0x7f070006;
        public static final int left=0x7f070002;
        public static final int main_description=0x7f070011;
        public static final int main_image=0x7f070012;
        public static final int main_linear1=0x7f07000c;
        public static final int main_setup_btn_configure_imes=0x7f07000d;
        public static final int main_setup_btn_get_dicts=0x7f070010;
        public static final int main_setup_btn_input_lang=0x7f07000e;
        public static final int main_setup_btn_set_ime=0x7f07000f;
        public static final int mode_email=0x7f07001e;
        public static final int mode_email_with_settings_key=0x7f070023;
        public static final int mode_im=0x7f07001f;
        public static final int mode_im_with_settings_key=0x7f070024;
        public static final int mode_normal=0x7f07001c;
        public static final int mode_normal_with_settings_key=0x7f070021;
        public static final int mode_symbols=0x7f070026;
        public static final int mode_symbols_with_settings_key=0x7f070027;
        public static final int mode_url=0x7f07001d;
        public static final int mode_url_with_settings_key=0x7f070022;
        public static final int mode_webentry=0x7f070020;
        public static final int mode_webentry_with_settings_key=0x7f070025;
        public static final int normal=0x7f070004;
        public static final int progress=0x7f070015;
        public static final int right=0x7f070003;
        public static final int seekBarPref=0x7f070019;
        public static final int seekMax=0x7f07001b;
        public static final int seekMin=0x7f07001a;
        public static final int seekVal=0x7f070018;
        public static final int text=0x7f070013;
        public static final int top=0x7f070000;
        public static final int white=0x7f070007;
    }
    public static final class integer {
        public static final int config_delay_after_preview=0x7f0b0002;
        public static final int config_delay_before_key_repeat_start=0x7f0b0007;
        public static final int config_delay_before_preview=0x7f0b0000;
        public static final int config_delay_before_space_preview=0x7f0b0001;
        public static final int config_key_repeat_interval=0x7f0b0008;
        public static final int config_mini_keyboard_fadein_anim_time=0x7f0b0005;
        public static final int config_mini_keyboard_fadeout_anim_time=0x7f0b0006;
        public static final int config_multi_tap_key_timeout=0x7f0b0009;
        public static final int config_preview_fadein_anim_time=0x7f0b0003;
        public static final int config_preview_fadeout_anim_time=0x7f0b0004;
        public static final int key_alt_left=0x7f0b0018;
        public static final int key_break=0x7f0b0023;
        public static final int key_caps_lock=0x7f0b001e;
        public static final int key_ctrl_left=0x7f0b001d;
        public static final int key_delete=0x7f0b000f;
        public static final int key_dpad_center=0x7f0b0017;
        public static final int key_dpad_down=0x7f0b0014;
        public static final int key_dpad_left=0x7f0b0015;
        public static final int key_dpad_right=0x7f0b0016;
        /**   Keycodes for special keys, using negative KeyEvent keycode numbers 
         */
        public static final int key_dpad_up=0x7f0b0013;
        public static final int key_end=0x7f0b0025;
        public static final int key_escape=0x7f0b001b;
        public static final int key_f1=0x7f0b0012;
        public static final int key_fkey_f1=0x7f0b0027;
        public static final int key_fkey_f10=0x7f0b0030;
        public static final int key_fkey_f11=0x7f0b0031;
        public static final int key_fkey_f12=0x7f0b0032;
        public static final int key_fkey_f2=0x7f0b0028;
        public static final int key_fkey_f3=0x7f0b0029;
        public static final int key_fkey_f4=0x7f0b002a;
        public static final int key_fkey_f5=0x7f0b002b;
        public static final int key_fkey_f6=0x7f0b002c;
        public static final int key_fkey_f7=0x7f0b002d;
        public static final int key_fkey_f8=0x7f0b002e;
        public static final int key_fkey_f9=0x7f0b002f;
        public static final int key_fn=0x7f0b0021;
        public static final int key_forward_del=0x7f0b001c;
        public static final int key_home=0x7f0b0024;
        public static final int key_insert=0x7f0b0026;
        public static final int key_meta_left=0x7f0b0020;
        public static final int key_num_lock=0x7f0b0033;
        public static final int key_page_down=0x7f0b001a;
        public static final int key_page_up=0x7f0b0019;
        public static final int key_return=0x7f0b000b;
        public static final int key_scroll_lock=0x7f0b001f;
        /**  Keycode for F1 (function) key. This one switches between language switch & comma/.com 
         */
        public static final int key_settings=0x7f0b0010;
        public static final int key_shift=0x7f0b000d;
        public static final int key_space=0x7f0b000c;
        public static final int key_symbol=0x7f0b000e;
        public static final int key_sysrq=0x7f0b0022;
        public static final int key_tab=0x7f0b000a;
        public static final int key_voice=0x7f0b0011;
    }
    public static final class layout {
        public static final int bubble_text=0x7f030000;
        public static final int candidate_preview=0x7f030001;
        public static final int candidates=0x7f030002;
        public static final int input_gingerbread=0x7f030003;
        public static final int input_ics=0x7f030004;
        public static final int input_stone_bold=0x7f030005;
        public static final int input_stone_normal=0x7f030006;
        public static final int input_stone_popup=0x7f030007;
        public static final int input_trans=0x7f030008;
        public static final int input_trans_neon=0x7f030009;
        public static final int key_preview=0x7f03000a;
        public static final int keyboard_popup=0x7f03000b;
        public static final int main=0x7f03000c;
        public static final int null_layout=0x7f03000d;
        public static final int recognition_status=0x7f03000e;
        public static final int seek_bar_dialog=0x7f03000f;
        public static final int voice_punctuation_hint=0x7f030010;
        public static final int voice_swipe_hint=0x7f030011;
    }
    public static final class raw {
        public static final int main=0x7f060000;
        public static final int type3=0x7f060001;
    }
    public static final class string {
        /**  Indicates that a word has been added to the dictionary 
         */
        public static final int added_word=0x7f0800f2;
        public static final int alternates_for_a=0x7f080003;
        public static final int alternates_for_a_umlaut=0x7f08001d;
        public static final int alternates_for_ae=0x7f08001e;
        public static final int alternates_for_b=0x7f080004;
        public static final int alternates_for_c=0x7f080005;
        public static final int alternates_for_cyrillic_e=0x7f08001f;
        public static final int alternates_for_cyrillic_soft_sign=0x7f080020;
        public static final int alternates_for_d=0x7f080006;
        public static final int alternates_for_e=0x7f080007;
        public static final int alternates_for_f=0x7f080008;
        public static final int alternates_for_g=0x7f080009;
        public static final int alternates_for_h=0x7f08000a;
        public static final int alternates_for_i=0x7f08000b;
        public static final int alternates_for_j=0x7f08000c;
        public static final int alternates_for_k=0x7f08000d;
        public static final int alternates_for_l=0x7f08000e;
        public static final int alternates_for_m=0x7f08000f;
        public static final int alternates_for_n=0x7f080010;
        public static final int alternates_for_o=0x7f080011;
        public static final int alternates_for_o_umlaut=0x7f080021;
        public static final int alternates_for_oe=0x7f080022;
        public static final int alternates_for_p=0x7f080012;
        public static final int alternates_for_q=0x7f080013;
        public static final int alternates_for_r=0x7f080014;
        public static final int alternates_for_s=0x7f080015;
        public static final int alternates_for_t=0x7f080016;
        public static final int alternates_for_u=0x7f080017;
        public static final int alternates_for_v=0x7f080018;
        public static final int alternates_for_w=0x7f080019;
        public static final int alternates_for_x=0x7f08001a;
        public static final int alternates_for_y=0x7f08001b;
        public static final int alternates_for_z=0x7f08001c;
        /**  Option to enable auto capitalization of sentences 
         */
        public static final int auto_cap=0x7f0800df;
        /**  Description for auto cap 
         */
        public static final int auto_cap_summary=0x7f0800e0;
        /**  Option to enable auto completion 
         */
        public static final int auto_complete=0x7f0800e7;
        /**  Dialog title for auto complete choices 
         */
        public static final int auto_complete_dialog_title=0x7f0800dc;
        /**  Description for auto completion 
         */
        public static final int auto_complete_summary=0x7f0800e8;
        /**  Option to automatically correct word on hitting space 
         */
        public static final int auto_correction=0x7f0800d7;
        /**  Description for auto_correction 
         */
        public static final int auto_correction_summary=0x7f0800d8;
        /**  Option to enable auto punctuate 
         */
        public static final int auto_punctuate=0x7f0800e1;
        /**  Description for auto punctuate 
         */
        public static final int auto_punctuate_summary=0x7f0800e2;
        /**  Press the "enter" key after the user speaks. Option on settings.
         */
        public static final int auto_submit=0x7f08011f;
        /**  Press the "enter" key after the user speaks. Summary of option in settings.
         */
        public static final int auto_submit_summary=0x7f080120;
        public static final int auto_version=0x7f080000;
        /**  Option to enable bigram completion 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
 no translation found for settings_key_modes:0 (8549888726962891527) 
 no translation found for settings_key_modes:1 (881280041213210923) 
 no translation found for settings_key_modes:2 (7317310620171067848) 
         */
        public static final int bigram_suggestion=0x7f0800ed;
        /**  Description for auto completion 
         */
        public static final int bigram_suggestion_summary=0x7f0800ee;
        /**  Label on button to stop recognition. Must be short to fit on button. 
         */
        public static final int cancel=0x7f080119;
        /**  appears above the image showing the back button used to close the keyboard 
         */
        public static final int close_the_keyboard=0x7f080122;
        public static final int default_chording_alt_key=0x7f080147;
        public static final int default_chording_ctrl_key=0x7f080145;
        public static final int default_chording_meta_key=0x7f080149;
        public static final int default_click_method=0x7f08016e;
        public static final int default_click_volume=0x7f08016c;
        public static final int default_height_landscape=0x7f0800bd;
        public static final int default_height_portrait=0x7f0800bc;
        public static final int default_hint_mode=0x7f080161;
        public static final int default_keyboard_mode_landscape=0x7f0800bf;
        public static final int default_keyboard_mode_portrait=0x7f0800be;
        public static final int default_long_press_duration=0x7f080001;
        public static final int default_popup_content=0x7f080180;
        public static final int default_render_mode=0x7f080002;
        public static final int default_swipe_down=0x7f08017a;
        public static final int default_swipe_left=0x7f08017b;
        public static final int default_swipe_right=0x7f08017c;
        public static final int default_swipe_up=0x7f080179;
        public static final int default_vol_down=0x7f08017e;
        public static final int default_vol_up=0x7f08017d;
        /**  Title for Latin keyboard debug settings activity / dialog 
         */
        public static final int english_ime_debug_settings=0x7f080184;
        /**  Title for Latin keyboard input options dialog 
 <string name="english_ime_name" msgid="7252517407088836577">"لوحة مفاتيح Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"إعدادات لوحة مفاتيح Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Клавиатура на Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Настройки на клавиатурата на Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Teclat Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Configuració del teclat d\'Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Klávesnice Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Nastavení klávesnice Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Android-tastatur"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Indstillinger for Android-tastatur"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Android-Tastatur"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Android-Tastatureinstellungen"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Πληκτρολόγιο Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Ρυθμίσεις πληκτρολογίου Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Android keyboard"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Android keyboard settings"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Teclado de Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Ajustes del teclado de Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Teclado de Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Ajustes del teclado de Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Teclado de Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Configuración de teclado de Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"صفحه کلید Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"تنظیمات صفحه کلید Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Android-näppäimistö"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Android-näppäimistön asetukset"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Clavier Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Paramètres du clavier Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"מקלדת Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"הגדרות מקלדת של Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Android tipkovnica"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Postavke tipkovnice za Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Android-billentyűzet"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Android billentyűzetbeállítások"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Keyboard Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Setelan keyboard Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Tastiera Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Impostazioni tastiera Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"מקלדת Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"הגדרות מקלדת של Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Androidキーボード"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Androidキーボードの設定"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Android 키보드"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Android 키보드 설정"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"„Android“ klaviatūra"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"„Android“ klaviatūros nustatymai"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Android tastatūra"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Android tastatūras iestatījumi"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Skjermtastatur"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Innstillinger for skjermtastatur"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Android-toetsenbord"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Instellingen voor Android-toetsenbord"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Klawiatura Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Ustawienia klawiatury Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Teclado Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Configurações de teclado Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Teclado do Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Definições de teclado do Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Tastatură Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Setările tastaturii Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Клавиатура Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Настройки клавиатуры Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Klávesnica Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Nastavenia klávesnice Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Tipkovnica Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Nastavitve tipkovnice Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Android тастатура"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Подешавања Android тастатуре"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Androids tangentbord"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Inställningar för Androids tangentbord"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"แป้นพิมพ์ Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"การตั้งค่าแป้นพิมพ์ Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Android keyboard"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Mga setting ng Android keyboard"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Android klavyesi"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Android klavye ayarları"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Клавіатура Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Налашт-ня клавіат. Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Bàn phím Android"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Cài đặt bàn phím Android"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Android 键盘"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Android 键盘设置"</string> 
 <string name="english_ime_name" msgid="7252517407088836577">"Android 鍵盤"</string> 
 <string name="english_ime_settings" msgid="6661589557206947774">"Android 鍵盤設定"</string> 
         */
        public static final int english_ime_input_options=0x7f0800c2;
        /**  Title for Latin keyboard  
         */
        public static final int english_ime_name=0x7f0800c0;
        /**  Title for Latin keyboard settings activity / dialog 
         */
        public static final int english_ime_settings=0x7f0800c1;
        /**  Inform the user that a particular language has an available dictionary 
         */
        public static final int has_dictionary=0x7f08012e;
        /**  Add to dictionary hint 
 outdated translation 8058519710062071085 
         */
        public static final int hint_add_to_dictionary=0x7f08012d;
        /**  Option to enable using nearby keys when correcting/predicting 
         */
        public static final int hit_correction=0x7f0800d3;
        /**  Option to enable using nearby keys when correcting/predicting in landscape
         */
        public static final int hit_correction_land=0x7f0800d5;
        /**  Description for hit_correction in landscape 
         */
        public static final int hit_correction_land_summary=0x7f0800d6;
        /**  Description for hit_correction  
         */
        public static final int hit_correction_summary=0x7f0800d4;
        public static final int key_ab01_alt=0x7f080097;
        public static final int key_ab01_main=0x7f080095;
        public static final int key_ab01_shift=0x7f080096;
        public static final int key_ab02_alt=0x7f08009a;
        public static final int key_ab02_main=0x7f080098;
        public static final int key_ab02_shift=0x7f080099;
        public static final int key_ab03_alt=0x7f08009d;
        public static final int key_ab03_main=0x7f08009b;
        public static final int key_ab03_shift=0x7f08009c;
        public static final int key_ab04_alt=0x7f0800a0;
        public static final int key_ab04_main=0x7f08009e;
        public static final int key_ab04_shift=0x7f08009f;
        public static final int key_ab05_alt=0x7f0800a3;
        public static final int key_ab05_main=0x7f0800a1;
        public static final int key_ab05_shift=0x7f0800a2;
        public static final int key_ab06_alt=0x7f0800a6;
        public static final int key_ab06_main=0x7f0800a4;
        public static final int key_ab06_shift=0x7f0800a5;
        public static final int key_ab07_alt=0x7f0800a9;
        public static final int key_ab07_main=0x7f0800a7;
        public static final int key_ab07_shift=0x7f0800a8;
        public static final int key_ab08_alt=0x7f0800ac;
        public static final int key_ab08_main=0x7f0800aa;
        public static final int key_ab08_shift=0x7f0800ab;
        public static final int key_ab09_alt=0x7f0800af;
        public static final int key_ab09_main=0x7f0800ad;
        public static final int key_ab09_shift=0x7f0800ae;
        public static final int key_ab10_alt=0x7f0800b2;
        public static final int key_ab10_main=0x7f0800b0;
        public static final int key_ab10_shift=0x7f0800b1;
        public static final int key_ac01_alt=0x7f080073;
        public static final int key_ac01_main=0x7f080071;
        public static final int key_ac01_shift=0x7f080072;
        public static final int key_ac02_alt=0x7f080076;
        public static final int key_ac02_main=0x7f080074;
        public static final int key_ac02_shift=0x7f080075;
        public static final int key_ac03_alt=0x7f080079;
        public static final int key_ac03_main=0x7f080077;
        public static final int key_ac03_shift=0x7f080078;
        public static final int key_ac04_alt=0x7f08007c;
        public static final int key_ac04_main=0x7f08007a;
        public static final int key_ac04_shift=0x7f08007b;
        public static final int key_ac05_alt=0x7f08007f;
        public static final int key_ac05_main=0x7f08007d;
        public static final int key_ac05_shift=0x7f08007e;
        public static final int key_ac06_alt=0x7f080082;
        public static final int key_ac06_main=0x7f080080;
        public static final int key_ac06_shift=0x7f080081;
        public static final int key_ac07_alt=0x7f080085;
        public static final int key_ac07_main=0x7f080083;
        public static final int key_ac07_shift=0x7f080084;
        public static final int key_ac08_alt=0x7f080088;
        public static final int key_ac08_main=0x7f080086;
        public static final int key_ac08_shift=0x7f080087;
        public static final int key_ac09_alt=0x7f08008b;
        public static final int key_ac09_main=0x7f080089;
        public static final int key_ac09_shift=0x7f08008a;
        public static final int key_ac10_alt=0x7f08008e;
        public static final int key_ac10_main=0x7f08008c;
        public static final int key_ac10_shift=0x7f08008d;
        public static final int key_ac11_alt=0x7f080091;
        public static final int key_ac11_main=0x7f08008f;
        public static final int key_ac11_shift=0x7f080090;
        public static final int key_ad01_alt=0x7f08004c;
        public static final int key_ad01_main=0x7f08004a;
        public static final int key_ad01_shift=0x7f08004b;
        public static final int key_ad02_alt=0x7f08004f;
        public static final int key_ad02_main=0x7f08004d;
        public static final int key_ad02_shift=0x7f08004e;
        public static final int key_ad03_alt=0x7f080052;
        public static final int key_ad03_main=0x7f080050;
        public static final int key_ad03_shift=0x7f080051;
        public static final int key_ad04_alt=0x7f080055;
        public static final int key_ad04_main=0x7f080053;
        public static final int key_ad04_shift=0x7f080054;
        public static final int key_ad05_alt=0x7f080058;
        public static final int key_ad05_main=0x7f080056;
        public static final int key_ad05_shift=0x7f080057;
        public static final int key_ad06_alt=0x7f08005b;
        public static final int key_ad06_main=0x7f080059;
        public static final int key_ad06_shift=0x7f08005a;
        public static final int key_ad07_alt=0x7f08005e;
        public static final int key_ad07_main=0x7f08005c;
        public static final int key_ad07_shift=0x7f08005d;
        public static final int key_ad08_alt=0x7f080061;
        public static final int key_ad08_main=0x7f08005f;
        public static final int key_ad08_shift=0x7f080060;
        public static final int key_ad09_alt=0x7f080064;
        public static final int key_ad09_main=0x7f080062;
        public static final int key_ad09_shift=0x7f080063;
        public static final int key_ad10_alt=0x7f080067;
        public static final int key_ad10_main=0x7f080065;
        public static final int key_ad10_shift=0x7f080066;
        public static final int key_ad11_alt=0x7f08006a;
        public static final int key_ad11_main=0x7f080068;
        public static final int key_ad11_shift=0x7f080069;
        public static final int key_ad12_alt=0x7f08006d;
        public static final int key_ad12_main=0x7f08006b;
        public static final int key_ad12_shift=0x7f08006c;
        public static final int key_ae01_alt=0x7f080028;
        public static final int key_ae01_main=0x7f080026;
        public static final int key_ae01_shift=0x7f080027;
        public static final int key_ae02_alt=0x7f08002b;
        public static final int key_ae02_main=0x7f080029;
        public static final int key_ae02_shift=0x7f08002a;
        public static final int key_ae03_alt=0x7f08002e;
        public static final int key_ae03_main=0x7f08002c;
        public static final int key_ae03_shift=0x7f08002d;
        public static final int key_ae04_alt=0x7f080031;
        public static final int key_ae04_main=0x7f08002f;
        public static final int key_ae04_shift=0x7f080030;
        public static final int key_ae05_alt=0x7f080034;
        public static final int key_ae05_main=0x7f080032;
        public static final int key_ae05_shift=0x7f080033;
        public static final int key_ae06_alt=0x7f080037;
        public static final int key_ae06_main=0x7f080035;
        public static final int key_ae06_shift=0x7f080036;
        public static final int key_ae07_alt=0x7f08003a;
        public static final int key_ae07_main=0x7f080038;
        public static final int key_ae07_shift=0x7f080039;
        public static final int key_ae08_alt=0x7f08003d;
        public static final int key_ae08_main=0x7f08003b;
        public static final int key_ae08_shift=0x7f08003c;
        public static final int key_ae09_alt=0x7f080040;
        public static final int key_ae09_main=0x7f08003e;
        public static final int key_ae09_shift=0x7f08003f;
        public static final int key_ae10_alt=0x7f080043;
        public static final int key_ae10_main=0x7f080041;
        public static final int key_ae10_shift=0x7f080042;
        public static final int key_ae11_alt=0x7f080046;
        public static final int key_ae11_main=0x7f080044;
        public static final int key_ae11_shift=0x7f080045;
        public static final int key_ae12_alt=0x7f080049;
        public static final int key_ae12_main=0x7f080047;
        public static final int key_ae12_shift=0x7f080048;
        public static final int key_bksl_alt=0x7f080070;
        public static final int key_bksl_main=0x7f08006e;
        public static final int key_bksl_shift=0x7f08006f;
        public static final int key_lsgt_alt=0x7f080094;
        public static final int key_lsgt_main=0x7f080092;
        public static final int key_lsgt_shift=0x7f080093;
        public static final int key_space_shift=0x7f0800b3;
        public static final int key_tlde_alt=0x7f080025;
        public static final int key_tlde_main=0x7f080023;
        public static final int key_tlde_shift=0x7f080024;
        /**  Description for keyboard theme switcher 
         */
        public static final int keyboard_layout=0x7f080135;
        /**  appears above image showing how to access keyboard settings 
         */
        public static final int keyboard_settings=0x7f080124;
        /**  Label for "switch to alphabetic" key.  Must be short to fit on key! 
         */
        public static final int label_alpha_key=0x7f080105;
        /**  Label for ALT modifier key.  Must be short to fit on key! 
         */
        public static final int label_alt_key=0x7f080106;
        /**  Label for soft enter key when it performs DONE action.  Must be short to fit on key! 
         */
        public static final int label_done_key=0x7f080101;
        /**  Label for soft enter key when it performs GO action.  Must be short to fit on key! 
         */
        public static final int label_go_key=0x7f0800ff;
        /**  Label for soft enter key when it performs NEXT action.  Must be short to fit on key! 
         */
        public static final int label_next_key=0x7f080100;
        /**  Label for "switch to numeric" key.  Must be short to fit on key! 
         */
        public static final int label_phone_key=0x7f080104;
        /**  Label for soft enter key when it performs SEND action.  Must be short to fit on key! 
         */
        public static final int label_send_key=0x7f080102;
        /**  Label for "switch to symbols" key.  Must be short to fit on key! 
         */
        public static final int label_symbol_key=0x7f080103;
        /**  Title summary for input language selection screen 
         */
        public static final int language_selection_summary=0x7f08012c;
        /**  Title for input language selection screen 
         */
        public static final int language_selection_title=0x7f08012b;
        public static final int layout_basic=0x7f080136;
        public static final int layout_gingerbread=0x7f08013a;
        public static final int layout_high_contrast=0x7f080137;
        public static final int layout_ics=0x7f08013b;
        public static final int layout_stone_bold=0x7f080138;
        public static final int layout_stone_normal=0x7f080139;
        public static final int layout_trans=0x7f08013c;
        public static final int layout_trans_neon=0x7f08013d;
        public static final int main_body=0x7f08018a;
        public static final int main_setup_configure_imes=0x7f080186;
        public static final int main_setup_get_dicts=0x7f080188;
        public static final int main_setup_input_lang=0x7f080189;
        public static final int main_setup_set_ime=0x7f080187;
        public static final int no_market_warning=0x7f080183;
        /**  Label on button when an error occurs 
         */
        public static final int ok=0x7f08011a;
        /**  appears above image showing the user to click on a TextView to show the IME 
         */
        public static final int open_the_keyboard=0x7f080121;
        public static final int percent=0x7f080166;
        /**  popular web domains for the locale - most popular, displayed on the keyboard 
         */
        public static final int popular_domain_0=0x7f080125;
        /**  popular web domains for the locale - item 1, displayed in the popup 
         */
        public static final int popular_domain_1=0x7f080126;
        /**  popular web domains for the locale - item 2, displayed in the popup 
         */
        public static final int popular_domain_2=0x7f080127;
        /**  popular web domains for the locale - item 3, displayed in the popup 
         */
        public static final int popular_domain_3=0x7f080128;
        /**  popular web domains for the locale - item 4, displayed in the popup 
         */
        public static final int popular_domain_4=0x7f080129;
        /**  Option to pop up the character with a larger font above soft keyboard 
         */
        public static final int popup_on_keypress=0x7f0800d2;
        /**  Option to enable text prediction 
         */
        public static final int prediction=0x7f0800d9;
        /**  Don't translate 
         */
        public static final int prediction_basic=0x7f0800f0;
        /**  Category title for text prediction 
         */
        public static final int prediction_category=0x7f0800da;
        /**  Don't translate 
         */
        public static final int prediction_full=0x7f0800f1;
        /**  Option to enable text prediction in landscape 
         */
        public static final int prediction_landscape=0x7f0800dd;
        /**  Description for text prediction 
         */
        public static final int prediction_landscape_summary=0x7f0800de;
        /**  Don't translate 
         */
        public static final int prediction_none=0x7f0800ef;
        /**  Description for text prediction 
         */
        public static final int prediction_summary=0x7f0800db;
        public static final int pref_screen_actions_title=0x7f080172;
        public static final int pref_screen_feedback_title=0x7f080133;
        public static final int pref_screen_view_title=0x7f080134;
        public static final int prefs_debug_mode=0x7f080185;
        /**  Description for enabling to send user statistics to Google 
         */
        public static final int prefs_description_log=0x7f080130;
        /**  Preferences item for enabling to send user statistics to Google 
         */
        public static final int prefs_enable_log=0x7f08012f;
        /**  Preferences item for enabling to correct suggestions by touching words you have typed 
         */
        public static final int prefs_enable_recorrection=0x7f080131;
        /**  The summary for the preferences item for enabling to correct suggestions by touching words you have typed 
         */
        public static final int prefs_enable_recorrection_summary=0x7f080132;
        /**  Option to show/hide the settings key 
         */
        public static final int prefs_settings_key=0x7f0800e9;
        /**  Option to enable quick fixes 
         */
        public static final int quick_fixes=0x7f0800e3;
        /**  Description for quick fixes 
         */
        public static final int quick_fixes_summary=0x7f0800e4;
        public static final int recorrect_warning=0x7f080182;
        public static final int render_mode_unavailable=0x7f080171;
        public static final int seek_pref_0=0x7f08018c;
        public static final int seek_pref_max=0x7f08018e;
        public static final int seek_pref_val=0x7f08018d;
        /**  Menu item for launching Input method picker 
         */
        public static final int selectInputMethod=0x7f08012a;
        /**  Symbols that are sentence separators, for purposes of making it hug the last sentence. 
 Symbols that are sentence separators, for purposes of making it hug the last sentence. 
 Symbols that are sentence separators, for purposes of making it hug the last sentence. 
 Symbols that are sentence separators, for purposes of making it hug the last sentence. 
         */
        public static final int sentence_separators=0x7f0800b5;
        /**  Always hide the settings key 
         */
        public static final int settings_key_mode_always_hide=0x7f0800ba;
        /**  Option to always hide the settings key 
         */
        public static final int settings_key_mode_always_hide_name=0x7f0800ec;
        /**  Always show the settings key 
         */
        public static final int settings_key_mode_always_show=0x7f0800b9;
        /**  Option to always show the settings key 
         */
        public static final int settings_key_mode_always_show_name=0x7f0800eb;
        /**  Option values to show/hide the settings key in onscreen keyboard 
 Automatically decide to show or hide the settings key 
         */
        public static final int settings_key_mode_auto=0x7f0800b8;
        /**  Option to automatically decide to show/hide the settings key 
         */
        public static final int settings_key_mode_auto_name=0x7f0800ea;
        /**  Option to enable showing suggestions 
         */
        public static final int show_suggestions=0x7f0800e5;
        /**  Description for show suggestions 
         */
        public static final int show_suggestions_summary=0x7f0800e6;
        /**  Option to play back sound on keypress in soft keyboard 
         */
        public static final int sound_on_keypress=0x7f0800d1;
        public static final int subtype_mode_keyboard=0x7f08013e;
        public static final int subtype_mode_voice=0x7f08013f;
        /**  Symbols that are suggested between words 
 Symbols that are suggested between words 
         */
        public static final int suggested_punctuations=0x7f0800b7;
        /**  Symbols that are suggested between words 
         */
        public static final int suggested_punctuations_default=0x7f0800b6;
        public static final int summary_caps_lock_false=0x7f08015c;
        public static final int summary_caps_lock_true=0x7f08015b;
        public static final int summary_compact_mode_enabled=0x7f080143;
        public static final int summary_connectbot_tab_hack_false=0x7f080159;
        public static final int summary_connectbot_tab_hack_true=0x7f080158;
        public static final int summary_force_keyboard_on_false=0x7f080152;
        public static final int summary_force_keyboard_on_true=0x7f080151;
        public static final int summary_fullscreen_override_false=0x7f08014f;
        public static final int summary_fullscreen_override_true=0x7f08014e;
        public static final int summary_keyboard_notification_false=0x7f080155;
        public static final int summary_keyboard_notification_true=0x7f080154;
        public static final int summary_shift_lock_modifiers_false=0x7f08015f;
        public static final int summary_shift_lock_modifiers_true=0x7f08015e;
        public static final int summary_suggestions_in_landscape_false=0x7f08014c;
        public static final int summary_suggestions_in_landscape_true=0x7f08014b;
        public static final int summary_touch_pos_false=0x7f080164;
        public static final int summary_touch_pos_true=0x7f080163;
        public static final int text_test=0x7f08018b;
        /**  Tip to press ?123 to access numbers and symbols 
         */
        public static final int tip_access_symbols=0x7f0800f5;
        /**  Tip to long press on typed word to add to dictionary 
         */
        public static final int tip_add_to_dictionary=0x7f0800f6;
        /**  Tip to dismiss keyboard 
         */
        public static final int tip_dismiss=0x7f0800f4;
        /**  Tip to long press on keys 
         */
        public static final int tip_long_press=0x7f0800f3;
        /**  Tutorial tip 4 - How to switch back to alphabet keyboard 
         */
        public static final int tip_to_close_symbols=0x7f0800fc;
        /**  Tutorial tip 5 - How to launch keyboard settings 
         */
        public static final int tip_to_launch_settings=0x7f0800fd;
        /**  Tutorial tip 1 - The keyboard opens any time you touch a text field 
         */
        public static final int tip_to_open_keyboard=0x7f0800f9;
        /**  Tutorial tip 3 - How to switch to number/symbol keyboard 
         */
        public static final int tip_to_open_symbols=0x7f0800fb;
        /**  Tutorial tip 6 - Done with the tutorial 
         */
        public static final int tip_to_start_typing=0x7f0800fe;
        /**  Tutorial tip 2 - Touch and hold a key to view accents (examples) 
         */
        public static final int tip_to_view_accents=0x7f0800fa;
        public static final int title_application_category=0x7f080156;
        public static final int title_candidate_scale=0x7f080169;
        public static final int title_caps_lock=0x7f08015a;
        public static final int title_chording_alt_key=0x7f080146;
        public static final int title_chording_ctrl_key=0x7f080144;
        public static final int title_chording_meta_key=0x7f080148;
        public static final int title_click_method=0x7f08016d;
        public static final int title_click_volume=0x7f08016b;
        public static final int title_compact_mode_enabled=0x7f080142;
        public static final int title_connectbot_tab_hack=0x7f080157;
        public static final int title_debugging=0x7f0800cb;
        public static final int title_force_keyboard_on=0x7f080150;
        public static final int title_fullscreen_override=0x7f08014d;
        public static final int title_hardware_key_actions=0x7f0800cf;
        public static final int title_hint_mode=0x7f080160;
        public static final int title_input_connection_details=0x7f0800cc;
        public static final int title_input_mode_settings=0x7f0800ca;
        public static final int title_key_behavior_settings=0x7f0800c7;
        public static final int title_key_layout_options=0x7f0800c6;
        public static final int title_keyboard_height_landscape=0x7f0800c5;
        public static final int title_keyboard_height_portrait=0x7f0800c4;
        public static final int title_keyboard_mode_landscape=0x7f080141;
        public static final int title_keyboard_mode_portrait=0x7f080140;
        public static final int title_keyboard_notification=0x7f080153;
        /**  Various configuration titles 
         */
        public static final int title_keyboard_view_settings=0x7f0800c3;
        public static final int title_label_scale=0x7f080168;
        public static final int title_long_press_alternate_keys=0x7f0800c8;
        public static final int title_long_press_duration=0x7f08016f;
        public static final int title_popup_content=0x7f08017f;
        public static final int title_render_mode=0x7f080170;
        public static final int title_shift_lock_modifiers=0x7f08015d;
        public static final int title_slide_keys=0x7f080165;
        public static final int title_suggested_punctuation=0x7f0800c9;
        public static final int title_suggestions_in_landscape=0x7f08014a;
        public static final int title_swipe_down=0x7f080174;
        public static final int title_swipe_gestures=0x7f0800ce;
        public static final int title_swipe_left=0x7f080175;
        public static final int title_swipe_right=0x7f080176;
        public static final int title_swipe_up=0x7f080173;
        public static final int title_top_row_scale=0x7f080167;
        public static final int title_touch_pos=0x7f080162;
        public static final int title_version=0x7f0800cd;
        public static final int title_vibrate_len=0x7f08016a;
        public static final int title_vol_down=0x7f080178;
        public static final int title_vol_up=0x7f080177;
        /**  appears above image showing how to use touch and hold 
         */
        public static final int touch_and_hold=0x7f080123;
        /**  Instruction to touch the bubble to continue 
         */
        public static final int touch_to_continue=0x7f0800f7;
        /**  Instruction to touch the bubble to start typing 
         */
        public static final int touch_to_finish=0x7f0800f8;
        /**  Vibration duration in milliseconds, for key presses in the IME. This can be hardware
        dependent and may require overriding with a device specific overlay. 
         */
        public static final int vibrate_duration_ms=0x7f0800bb;
        /**  Option to provide vibrate/haptic feedback on keypress 
         */
        public static final int vibrate_on_keypress=0x7f0800d0;
        /**  Short message shown for an audio error. 
         */
        public static final int voice_audio_error=0x7f080112;
        /**  Short message shown when a generic error occurs. 
         */
        public static final int voice_error=0x7f08010f;
        /**  Message to show when user clicks the swiping hint (which says
        "Swipe across keyboard to speak"). Also shown when enabling settings. 
         */
        public static final int voice_hint_dialog_message=0x7f08010b;
        /**  Short message shown before the user should speak. 
         */
        public static final int voice_initializing=0x7f08010e;
        /**  Preferences item for enabling speech input 
         */
        public static final int voice_input=0x7f08011b;
        /**  Short message to tell the user the system is ready for them to speak. 
         */
        public static final int voice_listening=0x7f08010c;
        /**  Don't translate 
         */
        public static final int voice_mode_main=0x7f08011c;
        /**  Don't translate 
         */
        public static final int voice_mode_off=0x7f08011e;
        /**  Don't translate 
         */
        public static final int voice_mode_symbols=0x7f08011d;
        /**  Short message shown for a network error. 
         */
        public static final int voice_network_error=0x7f080110;
        /**  Short message shown when the server couldn't parse any speech. 
         */
        public static final int voice_no_match=0x7f080115;
        public static final int voice_not_enabled_warning=0x7f080181;
        /**  Short message shown when the user initiates voice and voice
	search is not installed. 
         */
        public static final int voice_not_installed=0x7f080116;
        /**  Short hint shown in candidate view to explain that user can speak punctuation. 
         */
        public static final int voice_punctuation_hint=0x7f080118;
        /**  Short message shown for an error with the voice server. 
         */
        public static final int voice_server_error=0x7f080113;
        /**  Short message shown when no speech is heard. 
         */
        public static final int voice_speech_timeout=0x7f080114;
        /**  Short hint shown in candidate view to explain voice input. 
         */
        public static final int voice_swipe_hint=0x7f080117;
        /**  Short message shown for a network error where the utterance was really long,
         in which case we should suggest that the user speak less. 
         */
        public static final int voice_too_much_speech=0x7f080111;
        /**  An additional part of the warning dialog for voice input that only shows when the user
         actually initiates voice input, rather than just turning it on in settings. 
         */
        public static final int voice_warning_how_to_turn_off=0x7f08010a;
        /**  Message that gets put at the top of the warning dialog if the user is attempting to use
         voice input in a currently unsupported locale. Voice input will work for such a user,
         but it will only recognize them in English. 
         */
        public static final int voice_warning_locale_not_supported=0x7f080108;
        /**  Message of the warning dialog that shows when a user initiates voice input for
         the first time, or turns it on in settings. 
         */
        public static final int voice_warning_may_not_understand=0x7f080109;
        /**  Voice related labels 
 Title of the warning dialog that shows when a user initiates voice input for
         the first time. 
         */
        public static final int voice_warning_title=0x7f080107;
        /**  Short message shown after the user finishes speaking. 
         */
        public static final int voice_working=0x7f08010d;
        /**  Symbols that are commonly considered word separators in this language 
 Symbols that are commonly considered word separators in this language 
 Symbols that are commonly considered word separators in this language 
 Symbols that are commonly considered word separators in this language 
 Symbols that are commonly considered word separators in this language 
         */
        public static final int word_separators=0x7f0800b4;
    }
    public static final class style {
        public static final int KeyPreviewAnimation=0x7f0e0001;
        public static final int LatinKeyboardBaseView=0x7f0e0000;
        public static final int MiniKeyboardAnimation=0x7f0e0002;
    }
    public static final class xml {
        public static final int dictionary=0x7f050000;
        public static final int kbd_compact=0x7f050001;
        public static final int kbd_compact_fn=0x7f050002;
        public static final int kbd_extension=0x7f050003;
        public static final int kbd_extension_full=0x7f050004;
        public static final int kbd_full=0x7f050005;
        public static final int kbd_full_fn=0x7f050006;
        public static final int kbd_phone=0x7f050007;
        public static final int kbd_phone_symbols=0x7f050008;
        public static final int kbd_popup_narrow_template=0x7f050009;
        public static final int kbd_popup_template=0x7f05000a;
        public static final int kbd_qwerty=0x7f05000b;
        public static final int kbd_symbols=0x7f05000c;
        public static final int kbd_symbols_shift=0x7f05000d;
        public static final int language_prefs=0x7f05000e;
        public static final int method=0x7f05000f;
        public static final int popup_at=0x7f050010;
        public static final int popup_comma=0x7f050011;
        public static final int popup_domains=0x7f050012;
        public static final int popup_mic=0x7f050013;
        public static final int popup_punctuation=0x7f050014;
        public static final int popup_slash=0x7f050015;
        public static final int popup_smileys=0x7f050016;
        public static final int popup_tab=0x7f050017;
        public static final int prefs=0x7f050018;
        public static final int prefs_actions=0x7f050019;
        public static final int prefs_feedback=0x7f05001a;
        public static final int prefs_for_debug=0x7f05001b;
        public static final int prefs_view=0x7f05001c;
    }
    public static final class styleable {
        /** Attributes that can be used with a Keyboard.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_horizontalGap org.pocketworkstation.pckeyboard:horizontalGap}</code></td><td> Default horizontal gap between keys.</td></tr>
           <tr><td><code>{@link #Keyboard_horizontalPad org.pocketworkstation.pckeyboard:horizontalPad}</code></td><td> Horizontal padding around key.</td></tr>
           <tr><td><code>{@link #Keyboard_keyHeight org.pocketworkstation.pckeyboard:keyHeight}</code></td><td> Default height of a key, in pixels or percentage of display width.</td></tr>
           <tr><td><code>{@link #Keyboard_keyWidth org.pocketworkstation.pckeyboard:keyWidth}</code></td><td> Default width of a key, in pixels or percentage of display width.</td></tr>
           <tr><td><code>{@link #Keyboard_layoutColumns org.pocketworkstation.pckeyboard:layoutColumns}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_layoutRows org.pocketworkstation.pckeyboard:layoutRows}</code></td><td> Layout info for key sizing purposes, giving rows/column counts of the base grid </td></tr>
           <tr><td><code>{@link #Keyboard_verticalGap org.pocketworkstation.pckeyboard:verticalGap}</code></td><td> Default vertical gap between rows of keys.</td></tr>
           <tr><td><code>{@link #Keyboard_verticalPad org.pocketworkstation.pckeyboard:verticalPad}</code></td><td> Vertical padding around key.</td></tr>
           </table>
           @see #Keyboard_horizontalGap
           @see #Keyboard_horizontalPad
           @see #Keyboard_keyHeight
           @see #Keyboard_keyWidth
           @see #Keyboard_layoutColumns
           @see #Keyboard_layoutRows
           @see #Keyboard_verticalGap
           @see #Keyboard_verticalPad
         */
        public static final int[] Keyboard = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007
        };
        /**
          <p>
          @attr description
           Default horizontal gap between keys. Added to key size. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:horizontalGap
        */
        public static final int Keyboard_horizontalGap = 2;
        /**
          <p>
          @attr description
           Horizontal padding around key. Included in key size. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:horizontalPad
        */
        public static final int Keyboard_horizontalPad = 4;
        /**
          <p>
          @attr description
           Default height of a key, in pixels or percentage of display width. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyHeight
        */
        public static final int Keyboard_keyHeight = 1;
        /**
          <p>
          @attr description
           Default width of a key, in pixels or percentage of display width. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyWidth
        */
        public static final int Keyboard_keyWidth = 0;
        /**
          <p>This symbol is the offset where the {@link org.pocketworkstation.pckeyboard.R.attr#layoutColumns}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name org.pocketworkstation.pckeyboard:layoutColumns
        */
        public static final int Keyboard_layoutColumns = 7;
        /**
          <p>
          @attr description
           Layout info for key sizing purposes, giving rows/column counts of the base grid 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:layoutRows
        */
        public static final int Keyboard_layoutRows = 6;
        /**
          <p>
          @attr description
           Default vertical gap between rows of keys. Added to key size. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:verticalGap
        */
        public static final int Keyboard_verticalGap = 3;
        /**
          <p>
          @attr description
           Vertical padding around key. Included in key size. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:verticalPad
        */
        public static final int Keyboard_verticalPad = 5;
        /** Attributes that can be used with a Keyboard_Key.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Key_capsLabel org.pocketworkstation.pckeyboard:capsLabel}</code></td><td> The label to display on the caps-shifted key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_codes org.pocketworkstation.pckeyboard:codes}</code></td><td> The unicode value or comma-separated values that this key outputs.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_iconPreview org.pocketworkstation.pckeyboard:iconPreview}</code></td><td> The icon to show in the popup preview.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_isCursor org.pocketworkstation.pckeyboard:isCursor}</code></td><td> Whether this is a cursor key (modifies styling).</td></tr>
           <tr><td><code>{@link #Keyboard_Key_isModifier org.pocketworkstation.pckeyboard:isModifier}</code></td><td> Whether this is a modifier key such as Alt or Shift.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_isRepeatable org.pocketworkstation.pckeyboard:isRepeatable}</code></td><td> Whether long-pressing on this key will make it repeat.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_isSticky org.pocketworkstation.pckeyboard:isSticky}</code></td><td> Whether this is a toggle key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyEdgeFlags org.pocketworkstation.pckeyboard:keyEdgeFlags}</code></td><td> Key edge flags.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyIcon org.pocketworkstation.pckeyboard:keyIcon}</code></td><td> The icon to display on the key instead of the label.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLabel org.pocketworkstation.pckeyboard:keyLabel}</code></td><td> The label to display on the key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyOutputText org.pocketworkstation.pckeyboard:keyOutputText}</code></td><td> The string of characters to output when this key is pressed.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyboardMode org.pocketworkstation.pckeyboard:keyboardMode}</code></td><td> Mode of the keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_popupCharacters org.pocketworkstation.pckeyboard:popupCharacters}</code></td><td> The characters to display in the popup keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_popupKeyboard org.pocketworkstation.pckeyboard:popupKeyboard}</code></td><td> The XML keyboard layout of any popup keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_shiftLabel org.pocketworkstation.pckeyboard:shiftLabel}</code></td><td> The label to display on the shifted key.</td></tr>
           </table>
           @see #Keyboard_Key_capsLabel
           @see #Keyboard_Key_codes
           @see #Keyboard_Key_iconPreview
           @see #Keyboard_Key_isCursor
           @see #Keyboard_Key_isModifier
           @see #Keyboard_Key_isRepeatable
           @see #Keyboard_Key_isSticky
           @see #Keyboard_Key_keyEdgeFlags
           @see #Keyboard_Key_keyIcon
           @see #Keyboard_Key_keyLabel
           @see #Keyboard_Key_keyOutputText
           @see #Keyboard_Key_keyboardMode
           @see #Keyboard_Key_popupCharacters
           @see #Keyboard_Key_popupKeyboard
           @see #Keyboard_Key_shiftLabel
         */
        public static final int[] Keyboard_Key = {
            0x7f010009, 0x7f01000b, 0x7f01000c, 0x7f01000d,
            0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011,
            0x7f010012, 0x7f010013, 0x7f010014, 0x7f010015,
            0x7f010016, 0x7f010017, 0x7f010018
        };
        /**
          <p>
          @attr description
           The label to display on the caps-shifted key. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:capsLabel
        */
        public static final int Keyboard_Key_capsLabel = 13;
        /**
          <p>
          @attr description
           The unicode value or comma-separated values that this key outputs. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:codes
        */
        public static final int Keyboard_Key_codes = 1;
        /**
          <p>
          @attr description
           The icon to show in the popup preview. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:iconPreview
        */
        public static final int Keyboard_Key_iconPreview = 9;
        /**
          <p>
          @attr description
           Whether this is a cursor key (modifies styling). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:isCursor
        */
        public static final int Keyboard_Key_isCursor = 7;
        /**
          <p>
          @attr description
           Whether this is a modifier key such as Alt or Shift. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:isModifier
        */
        public static final int Keyboard_Key_isModifier = 5;
        /**
          <p>
          @attr description
           Whether long-pressing on this key will make it repeat. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:isRepeatable
        */
        public static final int Keyboard_Key_isRepeatable = 8;
        /**
          <p>
          @attr description
           Whether this is a toggle key. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:isSticky
        */
        public static final int Keyboard_Key_isSticky = 6;
        /**
          <p>
          @attr description
           Key edge flags. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>1</td><td> Key is anchored to the left of the keyboard. </td></tr>
<tr><td><code>right</code></td><td>2</td><td> Key is anchored to the right of the keyboard. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyEdgeFlags
        */
        public static final int Keyboard_Key_keyEdgeFlags = 4;
        /**
          <p>
          @attr description
           The icon to display on the key instead of the label. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyIcon
        */
        public static final int Keyboard_Key_keyIcon = 14;
        /**
          <p>
          @attr description
           The label to display on the key. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyLabel
        */
        public static final int Keyboard_Key_keyLabel = 11;
        /**
          <p>
          @attr description
           The string of characters to output when this key is pressed. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyOutputText
        */
        public static final int Keyboard_Key_keyOutputText = 10;
        /**
          <p>
          @attr description
           Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the key will be skipped. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyboardMode
        */
        public static final int Keyboard_Key_keyboardMode = 0;
        /**
          <p>
          @attr description
           The characters to display in the popup keyboard. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:popupCharacters
        */
        public static final int Keyboard_Key_popupCharacters = 3;
        /**
          <p>
          @attr description
           The XML keyboard layout of any popup keyboard. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:popupKeyboard
        */
        public static final int Keyboard_Key_popupKeyboard = 2;
        /**
          <p>
          @attr description
           The label to display on the shifted key. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:shiftLabel
        */
        public static final int Keyboard_Key_shiftLabel = 12;
        /** Attributes that can be used with a Keyboard_Row.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Row_extension org.pocketworkstation.pckeyboard:extension}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Row_keyboardMode org.pocketworkstation.pckeyboard:keyboardMode}</code></td><td> Mode of the keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Row_rowEdgeFlags org.pocketworkstation.pckeyboard:rowEdgeFlags}</code></td><td> Row edge flags.</td></tr>
           </table>
           @see #Keyboard_Row_extension
           @see #Keyboard_Row_keyboardMode
           @see #Keyboard_Row_rowEdgeFlags
         */
        public static final int[] Keyboard_Row = {
            0x7f010008, 0x7f010009, 0x7f01000a
        };
        /**
          <p>This symbol is the offset where the {@link org.pocketworkstation.pckeyboard.R.attr#extension}
          attribute's value can be found in the {@link #Keyboard_Row} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name org.pocketworkstation.pckeyboard:extension
        */
        public static final int Keyboard_Row_extension = 2;
        /**
          <p>
          @attr description
           Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the row will be skipped. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyboardMode
        */
        public static final int Keyboard_Row_keyboardMode = 1;
        /**
          <p>
          @attr description
           Row edge flags. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>4</td><td> Row is anchored to the top of the keyboard. </td></tr>
<tr><td><code>bottom</code></td><td>8</td><td> Row is anchored to the bottom of the keyboard. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:rowEdgeFlags
        */
        public static final int Keyboard_Row_rowEdgeFlags = 0;
        /** Attributes that can be used with a LatinKeyboardBaseView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_backgroundAlpha org.pocketworkstation.pckeyboard:backgroundAlpha}</code></td><td>  Transparent key background? 0=fully transparent, 255=opaque (fast) </td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_backgroundDimAmount org.pocketworkstation.pckeyboard:backgroundDimAmount}</code></td><td></td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_keyBackground org.pocketworkstation.pckeyboard:keyBackground}</code></td><td> Image for the key.</td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_keyCursorColor org.pocketworkstation.pckeyboard:keyCursorColor}</code></td><td> Color to use for cursor key labels.</td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_keyHintColor org.pocketworkstation.pckeyboard:keyHintColor}</code></td><td> Color to use for key hint labels.</td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_keyHysteresisDistance org.pocketworkstation.pckeyboard:keyHysteresisDistance}</code></td><td> Hysteresis distance for key debouncing </td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_keyPreviewHeight org.pocketworkstation.pckeyboard:keyPreviewHeight}</code></td><td> Height of the key press feedback popup.</td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_keyPreviewLayout org.pocketworkstation.pckeyboard:keyPreviewLayout}</code></td><td> Layout resource for key press feedback.</td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_keyPreviewOffset org.pocketworkstation.pckeyboard:keyPreviewOffset}</code></td><td> Vertical offset of the key press feedback from the key.</td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_keyTextColor org.pocketworkstation.pckeyboard:keyTextColor}</code></td><td> Color to use for the label in a key.</td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_keyTextSize org.pocketworkstation.pckeyboard:keyTextSize}</code></td><td> Size of the text for character keys.</td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_keyTextStyle org.pocketworkstation.pckeyboard:keyTextStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_keyboardViewStyle org.pocketworkstation.pckeyboard:keyboardViewStyle}</code></td><td> Default KeyboardView style.</td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_labelTextSize org.pocketworkstation.pckeyboard:labelTextSize}</code></td><td> Size of the text for custom keys with some text and no icon.</td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_popupLayout org.pocketworkstation.pckeyboard:popupLayout}</code></td><td> Layout resource for popup keyboards.</td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_recolorSymbols org.pocketworkstation.pckeyboard:recolorSymbols}</code></td><td>  Do symbols need to be recolored? </td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_shadowColor org.pocketworkstation.pckeyboard:shadowColor}</code></td><td></td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_shadowRadius org.pocketworkstation.pckeyboard:shadowRadius}</code></td><td></td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_symbolColorScheme org.pocketworkstation.pckeyboard:symbolColorScheme}</code></td><td></td></tr>
           <tr><td><code>{@link #LatinKeyboardBaseView_verticalCorrection org.pocketworkstation.pckeyboard:verticalCorrection}</code></td><td> Amount to offset the touch Y coordinate by, for bias correction.</td></tr>
           </table>
           @see #LatinKeyboardBaseView_backgroundAlpha
           @see #LatinKeyboardBaseView_backgroundDimAmount
           @see #LatinKeyboardBaseView_keyBackground
           @see #LatinKeyboardBaseView_keyCursorColor
           @see #LatinKeyboardBaseView_keyHintColor
           @see #LatinKeyboardBaseView_keyHysteresisDistance
           @see #LatinKeyboardBaseView_keyPreviewHeight
           @see #LatinKeyboardBaseView_keyPreviewLayout
           @see #LatinKeyboardBaseView_keyPreviewOffset
           @see #LatinKeyboardBaseView_keyTextColor
           @see #LatinKeyboardBaseView_keyTextSize
           @see #LatinKeyboardBaseView_keyTextStyle
           @see #LatinKeyboardBaseView_keyboardViewStyle
           @see #LatinKeyboardBaseView_labelTextSize
           @see #LatinKeyboardBaseView_popupLayout
           @see #LatinKeyboardBaseView_recolorSymbols
           @see #LatinKeyboardBaseView_shadowColor
           @see #LatinKeyboardBaseView_shadowRadius
           @see #LatinKeyboardBaseView_symbolColorScheme
           @see #LatinKeyboardBaseView_verticalCorrection
         */
        public static final int[] LatinKeyboardBaseView = {
            0x7f01001f, 0x7f010020, 0x7f010021, 0x7f010022,
            0x7f010023, 0x7f010024, 0x7f010025, 0x7f010026,
            0x7f010027, 0x7f010028, 0x7f010029, 0x7f01002a,
            0x7f01002b, 0x7f01002c, 0x7f01002d, 0x7f01002e,
            0x7f01002f, 0x7f010030, 0x7f010031, 0x7f010032
        };
        /**
          <p>
          @attr description
            Transparent key background? 0=fully transparent, 255=opaque (fast) 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:backgroundAlpha
        */
        public static final int LatinKeyboardBaseView_backgroundAlpha = 8;
        /**
          <p>This symbol is the offset where the {@link org.pocketworkstation.pckeyboard.R.attr#backgroundDimAmount}
          attribute's value can be found in the {@link #LatinKeyboardBaseView} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name org.pocketworkstation.pckeyboard:backgroundDimAmount
        */
        public static final int LatinKeyboardBaseView_backgroundDimAmount = 17;
        /**
          <p>
          @attr description
           Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyBackground
        */
        public static final int LatinKeyboardBaseView_keyBackground = 1;
        /**
          <p>
          @attr description
           Color to use for cursor key labels. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyCursorColor
        */
        public static final int LatinKeyboardBaseView_keyCursorColor = 6;
        /**
          <p>
          @attr description
           Color to use for key hint labels. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyHintColor
        */
        public static final int LatinKeyboardBaseView_keyHintColor = 5;
        /**
          <p>
          @attr description
           Hysteresis distance for key debouncing 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyHysteresisDistance
        */
        public static final int LatinKeyboardBaseView_keyHysteresisDistance = 12;
        /**
          <p>
          @attr description
           Height of the key press feedback popup. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyPreviewHeight
        */
        public static final int LatinKeyboardBaseView_keyPreviewHeight = 11;
        /**
          <p>
          @attr description
           Layout resource for key press feedback.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyPreviewLayout
        */
        public static final int LatinKeyboardBaseView_keyPreviewLayout = 9;
        /**
          <p>
          @attr description
           Vertical offset of the key press feedback from the key. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyPreviewOffset
        */
        public static final int LatinKeyboardBaseView_keyPreviewOffset = 10;
        /**
          <p>
          @attr description
           Color to use for the label in a key. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyTextColor
        */
        public static final int LatinKeyboardBaseView_keyTextColor = 4;
        /**
          <p>
          @attr description
           Size of the text for character keys. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyTextSize
        */
        public static final int LatinKeyboardBaseView_keyTextSize = 2;
        /**
          <p>This symbol is the offset where the {@link org.pocketworkstation.pckeyboard.R.attr#keyTextStyle}
          attribute's value can be found in the {@link #LatinKeyboardBaseView} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
          @attr name org.pocketworkstation.pckeyboard:keyTextStyle
        */
        public static final int LatinKeyboardBaseView_keyTextStyle = 18;
        /**
          <p>
          @attr description
           Default KeyboardView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:keyboardViewStyle
        */
        public static final int LatinKeyboardBaseView_keyboardViewStyle = 0;
        /**
          <p>
          @attr description
           Size of the text for custom keys with some text and no icon. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:labelTextSize
        */
        public static final int LatinKeyboardBaseView_labelTextSize = 3;
        /**
          <p>
          @attr description
           Layout resource for popup keyboards. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:popupLayout
        */
        public static final int LatinKeyboardBaseView_popupLayout = 14;
        /**
          <p>
          @attr description
            Do symbols need to be recolored? 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:recolorSymbols
        */
        public static final int LatinKeyboardBaseView_recolorSymbols = 7;
        /**
          <p>This symbol is the offset where the {@link org.pocketworkstation.pckeyboard.R.attr#shadowColor}
          attribute's value can be found in the {@link #LatinKeyboardBaseView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name org.pocketworkstation.pckeyboard:shadowColor
        */
        public static final int LatinKeyboardBaseView_shadowColor = 15;
        /**
          <p>This symbol is the offset where the {@link org.pocketworkstation.pckeyboard.R.attr#shadowRadius}
          attribute's value can be found in the {@link #LatinKeyboardBaseView} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name org.pocketworkstation.pckeyboard:shadowRadius
        */
        public static final int LatinKeyboardBaseView_shadowRadius = 16;
        /**
          <p>This symbol is the offset where the {@link org.pocketworkstation.pckeyboard.R.attr#symbolColorScheme}
          attribute's value can be found in the {@link #LatinKeyboardBaseView} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>white</code></td><td>0</td><td></td></tr>
<tr><td><code>black</code></td><td>1</td><td></td></tr>
</table>
          @attr name org.pocketworkstation.pckeyboard:symbolColorScheme
        */
        public static final int LatinKeyboardBaseView_symbolColorScheme = 19;
        /**
          <p>
          @attr description
           Amount to offset the touch Y coordinate by, for bias correction. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name org.pocketworkstation.pckeyboard:verticalCorrection
        */
        public static final int LatinKeyboardBaseView_verticalCorrection = 13;
        /** Attributes that can be used with a SeekBarPreference.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SeekBarPreference_asPercent org.pocketworkstation.pckeyboard:asPercent}</code></td><td></td></tr>
           <tr><td><code>{@link #SeekBarPreference_displayFormat org.pocketworkstation.pckeyboard:displayFormat}</code></td><td></td></tr>
           <tr><td><code>{@link #SeekBarPreference_logScale org.pocketworkstation.pckeyboard:logScale}</code></td><td></td></tr>
           <tr><td><code>{@link #SeekBarPreference_maxValue org.pocketworkstation.pckeyboard:maxValue}</code></td><td></td></tr>
           <tr><td><code>{@link #SeekBarPreference_minValue org.pocketworkstation.pckeyboard:minValue}</code></td><td></td></tr>
           <tr><td><code>{@link #SeekBarPreference_step org.pocketworkstation.pckeyboard:step}</code></td><td></td></tr>
           </table>
           @see #SeekBarPreference_asPercent
           @see #SeekBarPreference_displayFormat
           @see #SeekBarPreference_logScale
           @see #SeekBarPreference_maxValue
           @see #SeekBarPreference_minValue
           @see #SeekBarPreference_step
         */
        public static final int[] SeekBarPreference = {
            0x7f010019, 0x7f01001a, 0x7f01001b, 0x7f01001c,
            0x7f01001d, 0x7f01001e
        };
        /**
          <p>This symbol is the offset where the {@link org.pocketworkstation.pckeyboard.R.attr#asPercent}
          attribute's value can be found in the {@link #SeekBarPreference} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name org.pocketworkstation.pckeyboard:asPercent
        */
        public static final int SeekBarPreference_asPercent = 2;
        /**
          <p>This symbol is the offset where the {@link org.pocketworkstation.pckeyboard.R.attr#displayFormat}
          attribute's value can be found in the {@link #SeekBarPreference} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name org.pocketworkstation.pckeyboard:displayFormat
        */
        public static final int SeekBarPreference_displayFormat = 5;
        /**
          <p>This symbol is the offset where the {@link org.pocketworkstation.pckeyboard.R.attr#logScale}
          attribute's value can be found in the {@link #SeekBarPreference} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name org.pocketworkstation.pckeyboard:logScale
        */
        public static final int SeekBarPreference_logScale = 4;
        /**
          <p>This symbol is the offset where the {@link org.pocketworkstation.pckeyboard.R.attr#maxValue}
          attribute's value can be found in the {@link #SeekBarPreference} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name org.pocketworkstation.pckeyboard:maxValue
        */
        public static final int SeekBarPreference_maxValue = 1;
        /**
          <p>This symbol is the offset where the {@link org.pocketworkstation.pckeyboard.R.attr#minValue}
          attribute's value can be found in the {@link #SeekBarPreference} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name org.pocketworkstation.pckeyboard:minValue
        */
        public static final int SeekBarPreference_minValue = 0;
        /**
          <p>This symbol is the offset where the {@link org.pocketworkstation.pckeyboard.R.attr#step}
          attribute's value can be found in the {@link #SeekBarPreference} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name org.pocketworkstation.pckeyboard:step
        */
        public static final int SeekBarPreference_step = 3;
    };
}
